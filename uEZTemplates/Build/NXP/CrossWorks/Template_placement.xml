<!DOCTYPE Linker_Placement_File>
<Root name="Flash Section Placement">
$[ifdef LPC1788]          
 <MemorySegment name="$(FLASH_NAME:FLASH)" >
    <ProgramSection alignment="0x100" load="Yes" name=".vectors" start="$(FLASH_START:)"/>
    <ProgramSection alignment="4" load="Yes" name=".init" />
    <ProgramSection alignment="4" load="Yes" name=".text" />
    <ProgramSection alignment="4" load="Yes" name=".dtors" />
    <ProgramSection alignment="4" load="Yes" name=".ctors" />
    <ProgramSection alignment="4" load="Yes" name=".rodata" />
    <ProgramSection alignment="4" load="Yes" name=".constdata" />
    <ProgramSection alignment="4" load="Yes" runin=".fast_run" name=".fast" />
    <ProgramSection alignment="4" load="Yes" runin=".data_run" name=".data" />
    <ProgramSection alignment="4" load="Yes" runin=".tdata_run" name=".tdata" />
    <ProgramSection alignment="4" load="Yes" name=".ARM.exidx" address_symbol="__exidx_start" end_symbol="__exidx_end"/>
    <ProgramSection alignment="4" load="Yes" name=".ARM.extab" address_symbol="__extab_start" end_symbol="__extab_end" />
  </MemorySegment>
  <MemorySegment name="SDRAM">
    <!-- Reserved for frame buffer memory; Must match LCD_DISPLAY_BASE_ADDRESS location! -->
    <ProgramSection alignment="0x100" load="No" inputsections="*(.frames .frames.*)" name=".frames"/>
    <ProgramSection alignment="0x100" load="No" inputsections="*(.video .video.*)" name=".video"/>
    <!-- Reserved for emWin memory  -->
    <ProgramSection alignment="0x100" load="No" inputsections="*(.emWin .emWin.*)" name=".emWin"/>
    <ProgramSection alignment="4" size="__HEAPSIZE__" load="No" name=".heap"/>
    <!-- Reserved for Networking memory  -->
    <ProgramSection alignment="4" inputsections="*(.network .network.*)" name=".network"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.lwip .lwip.*)" name=".lwip"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.bss .bss.* .gnu.linkonce.b.*) *(COMMON)" name=".bss"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.bss.libdebugio.*)" name=".bss.libdebugio"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.tbss .tbss.*)" name=".tbss"/>
    <!-- Move rttbuf section here when using systemview with large trace buffer allocation. May break some RAM tests. -->
  </MemorySegment>
  <MemorySegment name="$(RAM_NAME:RAM)" >
    <ProgramSection alignment="0x100" load="No" name=".vectors_ram" start="$(RAM_START:)"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.non_init .non_init.*)" name=".non_init"/>
    <ProgramSection alignment="4" load="No" name=".fast_run" />
    <ProgramSection alignment="4" load="No" name=".data_run" />
    <ProgramSection alignment="4" load="No" name=".tdata_run"/>
    <!-- This is the RTT main structure which is small. Include in SRAM to automatically find it. -->
    <ProgramSection alignment="4" load="Yes" name=".rtt" />
    <ProgramSection alignment="4" load="No" inputsections="*(.IRAM)" name=".IRAM"/>
    <ProgramSection alignment="4" size="__STACKSIZE__" load="No" name=".stack" />
    <ProgramSection alignment="4" size="__STACKSIZE_PROCESS__" load="No" name=".stack_process" />
    <!-- This is the storage for the RTT buffers so we can have large buffers for console or systemview -->
    <ProgramSection alignment="4" inputsections="*(.rttbuf .rttbuf.*)" name=".rttbuf"/>
  </MemorySegment>
  <MemorySegment name="AHBSRAM0" oldname="USB RAM">
  </MemorySegment>
  <MemorySegment name="AHBSRAM1">
  </MemorySegment>
  <MemorySegment name="AHBSRAM" oldname="USB RAM">
    <ProgramSection load="No" name=".usbhostmem"/>
    <ProgramSection load="No" name=".mcimem"/>
    <!-- The ethernet area is reserved currently -->
    <ProgramSection load="No" name=".emacmem"/>
  </MemorySegment>
  $[endif]
  $[ifdef LPC4088]          
  <MemorySegment name="FLASH">
    <ProgramSection alignment="0x100" load="Yes" inputsections="*(.vectors .vectors.*)" name=".vectors"/>
    <ProgramSection alignment="4" load="Yes" inputsections="*(.init .init.*)" name=".init"/>
    <ProgramSection alignment="4" load="Yes" inputsections="*(.text .text.* .glue_7t .glue_7 .gnu.linkonce.t.* .gcc_except_table)" name=".text"/>
    <ProgramSection alignment="4" load="Yes" inputsections="KEEP (*(SORT(.dtors.*))) KEEP (*(.dtors))" name=".dtors"/>
    <ProgramSection alignment="4" load="Yes" inputsections="KEEP (*(SORT(.ctors.*))) KEEP (*(.ctors))" name=".ctors"/>
    <ProgramSection alignment="4" load="Yes" inputsections="*(.rodata .rodata.* .gnu.linkonce.r.*)" name=".rodata"/>
    <ProgramSection alignment="4" load="Yes" inputsections="*(.constdata .constdata.*)" name=".constdata"/>
    <ProgramSection alignment="4" load="Yes" runin=".fast_run" inputsections="*(.fast .fast.*)" name=".fast"/>
    <ProgramSection alignment="4" load="Yes" runin=".data_run" inputsections="*(.data .data.* .gnu.linkonce.d.*)" name=".data"/>
    <ProgramSection alignment="4" load="Yes" runin=".tdata_run" name=".tdata" />
    <ProgramSection alignment="4" load="Yes" name=".ARM.exidx" address_symbol="__exidx_start" end_symbol="__exidx_end"/>
    <ProgramSection alignment="4" load="Yes" name=".ARM.extab" address_symbol="__extab_start" end_symbol="__extab_end" />
  </MemorySegment>
  <!-- Cannot put the same section in both Flash and QSPI at the same time! -->
   <MemorySegment name="QSPI">
    <!-- Change individual files or folders's .text and .rodata sections to these for QSPI -->
    <ProgramSection alignment="4" load="Yes" name=".ExternalFlashText" />
    <ProgramSection alignment="4" load="Yes" name=".ExternalFlashRodata" />
    <ProgramSection alignment="4" load="Yes" name=".ExternalFlash" />
  </MemorySegment> 
  <MemorySegment name="SDRAM">
    <!-- Reserved for frame buffer memory; Must match LCD_DISPLAY_BASE_ADDRESS location! -->
    <ProgramSection alignment="0x100" load="No" inputsections="*(.frames .frames.*)" name=".frames"/>
    <ProgramSection alignment="0x100" load="No" inputsections="*(.video .video.*)" name=".video"/>
    <!-- Reserved for emWin memory  -->
    <ProgramSection alignment="0x100" load="No" inputsections="*(.emWin .emWin.*)" name=".emWin"/>
    <ProgramSection alignment="4" size="__HEAPSIZE__" load="No" name=".heap"/>
    <!-- Reserved for Networking memory  -->
    <ProgramSection alignment="4" inputsections="*(.network .network.*)" name=".network"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.lwip .lwip.*)" name=".lwip"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.bss .bss.* .gnu.linkonce.b.*) *(COMMON)" name=".bss"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.bss.libdebugio.*)" name=".bss.libdebugio"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.tbss .tbss.*)" name=".tbss"/>
    <!-- Move rttbuf section here when using systemview with large trace buffer allocation. May break some RAM tests. -->
  </MemorySegment>
  <MemorySegment name="RAM">
    <ProgramSection alignment="0x100" load="No" name=".vectors_ram" start="$(RAM_START:)"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.non_init .non_init.*)" name=".non_init"/>
    <ProgramSection alignment="4" load="No" name=".fast_run"/>
    <ProgramSection alignment="4" load="No" name=".data_run"/>
    <ProgramSection alignment="4" load="No" name=".tdata_run"/>
    <!-- This is the RTT main structure which is small. Include in SRAM to automatically find it. -->
    <ProgramSection alignment="4" load="Yes" name=".rtt" />
    <ProgramSection alignment="4" load="No" inputsections="*(.IRAM)" name=".IRAM"/>
    <ProgramSection alignment="4" size="__STACKSIZE__" load="No" name=".stack"/>
    <ProgramSection alignment="4" size="__STACKSIZE_PROCESS__" load="No" name=".stack_process"/>
    <!-- This is the storage for the RTT buffers so we can have large buffers for console or systemview -->
    <ProgramSection alignment="4" inputsections="*(.rttbuf .rttbuf.*)" name=".rttbuf"/>
  </MemorySegment>
  <MemorySegment name="AHBSRAM0" oldname="USB RAM">
  </MemorySegment>
  <MemorySegment name="AHBSRAM1">
  </MemorySegment>
  <MemorySegment name="AHBSRAM" oldname="USB RAM">
    <ProgramSection load="No" name=".usbhostmem"/>
    <ProgramSection load="No" name=".mcimem"/>
    <!-- The ethernet area is reserved currently -->
    <ProgramSection load="No" name=".emacmem"/>
  </MemorySegment>
  $[endif]
  $[ifdef LPC4357]
  <!-- Remember to set the CM0_SIZE=0x? Macros in the "Memory Map Macros" Section! -->
  <MemorySegment name="FLASHA0">
    <ProgramSection alignment="0x100" load="Yes" name=".vectors" start="$(FLASH_START:)" />
    <ProgramSection alignment="4" load="Yes" inputsections="*(.constFlashA .constFlashA.*)" name=".constFlashA"/>
    <!-- Can place specific read-only variables here to avoid wasting flash -->
  </MemorySegment>
  <MemorySegment name="$(FLASH_NAME:FLASH)">
    <ProgramSection alignment="4" load="Yes" name=".init" />
    <ProgramSection alignment="4" load="Yes" name=".init_rodata" />
    <ProgramSection alignment="4" load="Yes" name=".dtors" />
    <ProgramSection alignment="4" load="Yes" name=".ctors" />
    <ProgramSection alignment="4" load="Yes" name=".rodata" />
    <ProgramSection alignment="4" load="Yes" inputsections="*(.constdata .constdata.*)" name=".constdata"/>
    <ProgramSection alignment="4" load="Yes" inputsections="*(.conststring .conststring.*)" name=".conststring"/>
    <ProgramSection alignment="4" load="Yes" runin=".fast_run" name=".fast" />
    <ProgramSection alignment="4" load="Yes" runin=".data_run" name=".data" />
    <ProgramSection alignment="4" load="Yes" runin=".tdata_run" name=".tdata" />
    <ProgramSection alignment="4" load="Yes" name=".ARM.exidx" address_symbol="__exidx_start" end_symbol="__exidx_end"/>
    <ProgramSection alignment="4" load="Yes" name=".ARM.extab" address_symbol="__extab_start" end_symbol="__extab_end" />
  </MemorySegment>
  <MemorySegment name="FLASHB0">
    <!-- Maybe .init/CM0 vector section could be placed here or place specific read-only variables here to avoid wasting flash -->
    <ProgramSection alignment="4" load="Yes" inputsections="*(.constFlashB .constFlashB.*)" name=".constFlashB"/>
  </MemorySegment>
  <MemorySegment name="FLASHB">
    <ProgramSection alignment="4" load="Yes" name=".text" />    
  </MemorySegment>

  <!-- Cannot put the same section in both Flash and QSPI at the same time! -->
  <MemorySegment name="SPIFI">
    <!-- Change individual files or folders's .text and .rodata sections to these for QSPI -->
    <ProgramSection alignment="4" load="Yes" inputsections="*(.ExternalFlashResource .ExternalFlashResource.*)" name=".ExternalFlashResource" />
    <ProgramSection alignment="4" load="Yes" inputsections="*(.ExternalFlashHeader .ExternalFlashHeader.*)" name=".ExternalFlashHeader" />
    <ProgramSection alignment="4" load="Yes" inputsections="*(.ExternalFlashText .ExternalFlashText.*)" name=".ExternalFlashText" />
    <ProgramSection alignment="4" load="Yes" inputsections="*(.ExternalFlashRodata .ExternalFlashRodata.*)" name=".ExternalFlashRodata" />
    <ProgramSection alignment="4" load="Yes" name=".ExternalFlash" />
  </MemorySegment>
  <MemorySegment name="$(RAM_NAME:RAM);SDRAM">
    <!-- Reserved for frame buffer memory; Must match LCD_DISPLAY_BASE_ADDRESS location! -->
    <ProgramSection alignment="0x100" load="No" inputsections="*(.frames .frames.*)" name=".frames"/>
    <ProgramSection alignment="0x100" load="No" inputsections="*(.video .video.*)" name=".video"/>
    <!-- Reserved for emWin memory  -->
    <ProgramSection alignment="0x100" load="No" inputsections="*(.emWin .emWin.*)" name=".emWin"/>
    <ProgramSection alignment="4" load="No" size="__HEAPSIZE__" name=".heap"/>
    <!-- Reserved for Networking memory  -->
    <ProgramSection alignment="4" load="No" inputsections="*(.network .network.*)" name=".network"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.lwip .lwip.*)" name=".lwip"/>
    <ProgramSection alignment="4" load="No" inputsections="*(.bss .bss.* .gnu.linkonce.b.*) *(COMMON)" name=".bss"/>
    <!-- Move rttbuf section here when using systemview with large trace buffer allocation. May break some RAM tests. -->
  </MemorySegment>
  <MemorySegment name="SRAM1">
    <ProgramSection alignment="0x100" load="No" name=".vectors_ram" start="$(RAM_START:)"/>
    <ProgramSection alignment="4" load="No" name=".fast_run" />
    <ProgramSection alignment="4" load="No" name=".data_run" />
    <ProgramSection alignment="4" load="No" inputsections="*(.bss.libdebugio.*)" name=".bss.libdebugio"/>
    <ProgramSection alignment="4" load="No" name=".tbss" />
    <ProgramSection alignment="4" load="No" name=".non_init" />
    <ProgramSection alignment="4" load="No" name=".tdata_run" />
    <!-- This is the RTT main structure which is small. Include in SRAM to automatically find it. -->
    <ProgramSection alignment="4" load="No" name=".rtt" />
    <ProgramSection alignment="8" size="__STACKSIZE__" load="No" name=".stack" />
    <ProgramSection alignment="8" size="__STACKSIZE_PROCESS__" load="No" name=".stack_process" />
    <ProgramSection alignment="4" load="No" inputsections="*(.IRAM)" name=".IRAM"/>
    <!-- This is the storage for the RTT buffers so we can have large buffers for console or systemview -->
    <ProgramSection alignment="4" inputsections="*(.rttbuf .rttbuf.*)" name=".rttbuf"/>
  </MemorySegment>
  <MemorySegment name="SRAM2">
  </MemorySegment>
  
  <!-- Note that AHB section defines are different from the IAR project which is split into 3 sections. -->
  <!-- Note that the shown size of these will be the size-CM0 size. -->
  <MemorySegment name="AHBSRAM1">
    <!-- The AHB area from 0x20000000 to 0x2000C000 -->
    <ProgramSection load="No" name=".usbhostmem"/>
    <ProgramSection load="No" name=".emacmem"/>
    <ProgramSection load="No" name=".mcimem"/>
  </MemorySegment>

  <!-- When the Embedded Trace Buffer is used the 16 kB memory space at 0x2000C000 must not be used by any other process-->
  <MemorySegment name="AHBSRAM2">
    <!-- From 0x2000C000 to 0x2010000-->
  </MemorySegment>
  
  <MemorySegment name="CRP1">
    <ProgramSection alignment="4" load="Yes" inputsections="*(.crp1 .crp1*)" name=".crp1" address_symbol="__crp1_start" end_symbol="__crp1_end" />
  </MemorySegment>
  <MemorySegment name="CRP2">
    <ProgramSection alignment="4" load="Yes" inputsections="*(.crp2 .crp2*)" name=".crp2" address_symbol="__crp2_start" end_symbol="__crp2_end" />
  </MemorySegment>
$[endif]    
</Root>
